<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LiYanan2004 - 我的博客</title>
  
  <subtitle>@LiYanan2004</subtitle>
  <link href="https://liyanan2004.github.io/atom.xml" rel="self"/>
  
  <link href="https://liyanan2004.github.io/"/>
  <updated>2022-10-12T02:56:08.343Z</updated>
  <id>https://liyanan2004.github.io/</id>
  
  <author>
    <name>LiYanan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C语言 之 格式化输出</title>
    <link href="https://liyanan2004.github.io/formatted-output-in-c-programming-language/"/>
    <id>https://liyanan2004.github.io/formatted-output-in-c-programming-language/</id>
    <published>2022-10-08T13:34:26.173Z</published>
    <updated>2022-10-12T02:56:08.343Z</updated>
    
    <content type="html"><![CDATA[<p>前两天上课的时候，老师让输出个九九乘法表。</p><p>但是实际输出会觉得怪怪的，没对齐，尝试下对齐吧。</p><p>这样也不是不行是吧，哈哈。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1x1=1&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2x1=2 2x2= 4&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3x1=3 3x2= 6 3x3= 9&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;4x1=4 4x2= 8 4x3=12 4x4=16&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;5x1=5 5x2=10 5x3=15 5x4=20 5x5=25&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;6x1=6 6x2=12 6x3=18 6x4=24 6x5=30 6x6=36&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;7x1=7 7x2=14 7x3=21 7x4=28 7x5=35 7x6=42 7x7=49&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;8x1=8 8x2=16 8x3=24 8x4=32 8x5=40 8x6=48 8x7=56 8x8=64&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;9x1=9 9x2=18 9x3=27 9x4=36 9x5=45 9x6=54 9x7=63 9x8=72 9x9=81&quot;</span>);</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="没对齐的版本"><a href="#没对齐的版本" class="headerlink" title="没对齐的版本"></a>没对齐的版本</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%dx%d=%d &quot;</span>, i, j, i*j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对占位符格式化输出"><a href="#对占位符格式化输出" class="headerlink" title="对占位符格式化输出"></a>对占位符格式化输出</h2><p>就用乘法表作为例子，</p><p>输出的是 Int（%d），</p><p>需要对一位数的结果进行扩展，让它能够<strong>对齐下面的两位数数字</strong>。</p><p><strong>格式化输出格式：</strong>% (-&#x2F;0) [位宽 n] . [精度 m] d</p><article class="message is-warning">                <div class="message-body">            <p>格式中我增加了空格，方便阅读，<strong>实际代码中不能有空格哦</strong>。</p>        </div>    </article><p><strong>解释一下：</strong></p><p>位宽 n：输出的内容占命令行的 n 个字符宽度，比如：[4]（n&#x3D;1），[ 4]（n&#x3D;2）</p><p>精度m：小数点后保留几位（貌似默认是 6 好像），比如 <code>printf(&quot;%.2f&quot;, 3.1415);</code> 输出的是3.14</p><p>-&#x2F;0：这一部分是对自定义格式的一个补充。</p><ul><li><p>‘-‘：靠左输出（方括号并非输出内容，只是方便看到空格哈）</p><ul><li><code>printf(&quot;%-2d, 1&quot;);</code> 输出的是：[1 ]</li><li><code>printf(&quot;%2d, 1&quot;);</code> 输出的是：[ 1]</li></ul></li><li><p>‘0’：<strong>左侧</strong>补0⃣️</p><ul><li><code>printf(&quot;%02d, 1&quot;);</code> 输出的是：01</li></ul></li><li><p>-&#x2F;0 <strong>只能用一个</strong>，其中（靠左输出’-‘）的优先级更高，所以 <code>printf(&quot;%-02d&quot;, 1);</code> 输出的是 [1 ]</p></li></ul><article class="message is-primary">                <div class="message-body">            <p>%d 就没有必要设置精度了哈，三个格式化可以独立使用，但是要设置精度的话记得加上 <strong>Dot（.）</strong> 哦！</p><p>比如：</p><ul><li><code>%-2d</code></li><li><code>%05d</code></li><li><code>%.3f</code></li><li><code>%-5.2f</code></li><li>…</li></ul><p>可以在电脑上试试看这些的输出，更好地理解下。</p>        </div>    </article><h2 id="改进后的版本"><a href="#改进后的版本" class="headerlink" title="改进后的版本"></a>改进后的版本</h2><ol><li>靠右对齐：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%dx%d=%2d &quot;</span>, i, j, i*j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><article class="message is-dark">        <div class="message-header"><p>输出结果</p></div>        <div class="message-body">            <p>1x1&#x3D; 1<br>2x1&#x3D; 2 2x2&#x3D; 4<br>3x1&#x3D; 3 3x2&#x3D; 6 3x3&#x3D; 9<br>4x1&#x3D; 4 4x2&#x3D; 8 4x3&#x3D;12 4x4&#x3D;16<br>5x1&#x3D; 5 5x2&#x3D;10 5x3&#x3D;15 5x4&#x3D;20 5x5&#x3D;25<br>6x1&#x3D; 6 6x2&#x3D;12 6x3&#x3D;18 6x4&#x3D;24 6x5&#x3D;30 6x6&#x3D;36<br>7x1&#x3D; 7 7x2&#x3D;14 7x3&#x3D;21 7x4&#x3D;28 7x5&#x3D;35 7x6&#x3D;42 7x7&#x3D;49<br>8x1&#x3D; 8 8x2&#x3D;16 8x3&#x3D;24 8x4&#x3D;32 8x5&#x3D;40 8x6&#x3D;48 8x7&#x3D;56 8x8&#x3D;64<br>9x1&#x3D; 9 9x2&#x3D;18 9x3&#x3D;27 9x4&#x3D;36 9x5&#x3D;45 9x6&#x3D;54 9x7&#x3D;63 9x8&#x3D;72 9x9&#x3D;81 </p>        </div>    </article><ol start="2"><li>补零版本：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%dx%d=%02d &quot;</span>, i, j, i*j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><article class="message is-dark">        <div class="message-header"><p>输出结果</p></div>        <div class="message-body">            <p>1x1&#x3D;01<br>2x1&#x3D;02 2x2&#x3D;04<br>3x1&#x3D;03 3x2&#x3D;06 3x3&#x3D;09<br>4x1&#x3D;04 4x2&#x3D;08 4x3&#x3D;12 4x4&#x3D;16<br>5x1&#x3D;05 5x2&#x3D;10 5x3&#x3D;15 5x4&#x3D;20 5x5&#x3D;25<br>6x1&#x3D;06 6x2&#x3D;12 6x3&#x3D;18 6x4&#x3D;24 6x5&#x3D;30 6x6&#x3D;36<br>7x1&#x3D;07 7x2&#x3D;14 7x3&#x3D;21 7x4&#x3D;28 7x5&#x3D;35 7x6&#x3D;42 7x7&#x3D;49<br>8x1&#x3D;08 8x2&#x3D;16 8x3&#x3D;24 8x4&#x3D;32 8x5&#x3D;40 8x6&#x3D;48 8x7&#x3D;56 8x8&#x3D;64<br>9x1&#x3D;09 9x2&#x3D;18 9x3&#x3D;27 9x4&#x3D;36 9x5&#x3D;45 9x6&#x3D;54 9x7&#x3D;63 9x8&#x3D;72 9x9&#x3D;81 </p>        </div>    </article><ol start="3"><li>靠左对齐：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%dx%d=%-2d &quot;</span>, i, j, i*j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><article class="message is-dark">        <div class="message-header"><p>输出结果</p></div>        <div class="message-body">            <p>1x1&#x3D;1<br>2x1&#x3D;2   2x2&#x3D;4<br>3x1&#x3D;3   3x2&#x3D;6   3x3&#x3D;9<br>4x1&#x3D;4   4x2&#x3D;8   4x3&#x3D;12 4x4&#x3D;16<br>5x1&#x3D;5   5x2&#x3D;10 5x3&#x3D;15 5x4&#x3D;20 5x5&#x3D;25<br>6x1&#x3D;6   6x2&#x3D;12 6x3&#x3D;18 6x4&#x3D;24 6x5&#x3D;30 6x6&#x3D;36<br>7x1&#x3D;7   7x2&#x3D;14 7x3&#x3D;21 7x4&#x3D;28 7x5&#x3D;35 7x6&#x3D;42 7x7&#x3D;49<br>8x1&#x3D;8   8x2&#x3D;16 8x3&#x3D;24 8x4&#x3D;32 8x5&#x3D;40 8x6&#x3D;48 8x7&#x3D;56 8x8&#x3D;64<br>9x1&#x3D;9   9x2&#x3D;18 9x3&#x3D;27 9x4&#x3D;36 9x5&#x3D;45 9x6&#x3D;54 9x7&#x3D;63 9x8&#x3D;72 9x9&#x3D;81 </p>        </div>    </article>]]></content>
    
    
    <summary type="html">&lt;p&gt;前两天上课的时候，老师让输出个九九乘法表。&lt;/p&gt;
&lt;p&gt;但是实际输出会觉得怪怪的，没对齐，尝试下对齐吧。&lt;/p&gt;
&lt;p&gt;这样也不是不行是吧，哈哈。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;1x1=1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;2x1=2 2x2= 4&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;3x1=3 3x2= 6 3x3= 9&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;4x1=4 4x2= 8 4x3=12 4x4=16&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;5x1=5 5x2=10 5x3=15 5x4=20 5x5=25&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;6x1=6 6x2=12 6x3=18 6x4=24 6x5=30 6x6=36&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;7x1=7 7x2=14 7x3=21 7x4=28 7x5=35 7x6=42 7x7=49&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;8x1=8 8x2=16 8x3=24 8x4=32 8x5=40 8x6=48 8x7=56 8x8=64&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;9x1=9 9x2=18 9x3=27 9x4=36 9x5=45 9x6=54 9x7=63 9x8=72 9x9=81&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="学个习" scheme="https://liyanan2004.github.io/categories/%E5%AD%A6%E4%B8%AA%E4%B9%A0/"/>
    
    
    <category term="C语言" scheme="https://liyanan2004.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="写代码" scheme="https://liyanan2004.github.io/tags/%E5%86%99%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>JsDelivr不灵了？淦！</title>
    <link href="https://liyanan2004.github.io/jsdelivr-can-no-longer-accelerate-static-resources/"/>
    <id>https://liyanan2004.github.io/jsdelivr-can-no-longer-accelerate-static-resources/</id>
    <published>2022-10-05T07:03:05.022Z</published>
    <updated>2022-10-11T11:40:15.164Z</updated>
    
    <content type="html"><![CDATA[<p>还记得几年前做博客的时候，</p><p>图片上传到 GitHub 上，</p><p>用 JsDelivr 拉取 GitHub 上的静态资源，</p><p>速度嘎嘎快，</p><p>但是最近发现，</p><p>静态资源貌似都被重定向到 githubusercontent 上去了，</p><p><strong>可是，官网上却写着：</strong></p><p><img src="/img/jsdelivr-can-no-longer-accelerate-static-resources/important-in-china.jpeg"></p><span id="more"></span><h2 id="DNS-被污染"><a href="#DNS-被污染" class="headerlink" title="DNS 被污染"></a>DNS 被污染</h2><p>GitHub 上的 issue：</p><blockquote><p>Jsdelivr has been block again in China. Some places are polluted by DNS and are resolved to the IP of websites such as Facebook, Twitter, etc. Although other places can be resolved to the correct IP, they are reset by GWF during the TLS handshake and still inaccessible.<br>But fortunately, <code>fastly.jsdelivr.net</code> is not polluted at present.</p></blockquote><p>至于原因，</p><p>估计是某些人把非法的东西挂到 GitHub 上面去分享，</p><p>用 JsDelivr 去正常访问，</p><p>钻空子别发现了 哈哈。</p><article class="message is-success">                <div class="message-body">            <p>不过好在 DNS 污染已经被解决，但是在大陆地区也增加了许多限制了，来保证不会再次被污染。</p>        </div>    </article><h2 id="有什么影响？"><a href="#有什么影响？" class="headerlink" title="有什么影响？"></a>有什么影响？</h2><p><strong>DNS解析</strong>现在已经恢复正常，</p><p>但是国内的 ICP 应该是不可能恢复了，</p><p>JsDelivr 也不再提供 <strong>中国大陆地区</strong> 的 GitHub 静态资源的加速，（JS CSS 类文件除外）</p><p>所以博客内的图片也只能从 GitHub 拉取了，</p><p>导致<strong>网站加载时间可能会略长</strong>。</p><article class="message is-warning">        <div class="message-header"><p>6月份的时候国内静态资源已经不给访问了</p></div>        <div class="message-body">            <p>中国仅此一家合法的公共 CDN 就这么被限制了。</p><p>ICP也被吊销了。</p><p>淦！！ </p>        </div>    </article><article class="message is-dark">        <div class="message-header"><p>怎么办呢？</p></div>        <div class="message-body">            <p>我也在寻找更优的解决方案来加速页面加载。</p><p>后续可能考虑从 GitHub 转到国内的 Gitee</p>        </div>    </article>]]></content>
    
    
    <summary type="html">&lt;p&gt;还记得几年前做博客的时候，&lt;/p&gt;
&lt;p&gt;图片上传到 GitHub 上，&lt;/p&gt;
&lt;p&gt;用 JsDelivr 拉取 GitHub 上的静态资源，&lt;/p&gt;
&lt;p&gt;速度嘎嘎快，&lt;/p&gt;
&lt;p&gt;但是最近发现，&lt;/p&gt;
&lt;p&gt;静态资源貌似都被重定向到 githubusercontent 上去了，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可是，官网上却写着：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/jsdelivr-can-no-longer-accelerate-static-resources/important-in-china.jpeg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="吐个槽" scheme="https://liyanan2004.github.io/categories/%E5%90%90%E4%B8%AA%E6%A7%BD/"/>
    
    
    <category term="Web" scheme="https://liyanan2004.github.io/tags/Web/"/>
    
    <category term="JS" scheme="https://liyanan2004.github.io/tags/JS/"/>
    
    <category term="CDN" scheme="https://liyanan2004.github.io/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>新手表居然就卡bug？watchOS 9 太拉了...</title>
    <link href="https://liyanan2004.github.io/apple-watch-series-8-mic-failed/"/>
    <id>https://liyanan2004.github.io/apple-watch-series-8-mic-failed/</id>
    <published>2022-10-03T08:47:08.200Z</published>
    <updated>2022-10-12T14:18:21.445Z</updated>
    
    <content type="html"><![CDATA[<article class="message is-success">                <div class="message-body">            <p>此问题已在 watchOS 9.0.2 中修复。</p>        </div>    </article><p>如图</p><p><img src="/img/apple-watch-series-8-mic-failed/mic-failed.jpeg"></p><span id="more"></span><h2 id="高高兴兴地开箱"><a href="#高高兴兴地开箱" class="headerlink" title="高高兴兴地开箱"></a>高高兴兴地开箱</h2><iframe src="//player.bilibili.com/player.html?aid=688692484&bvid=BV1924y1X7K3&cid=851355605&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><p>你还可以：<a href="https://www.bilibili.com/video/BV1924y1X7K3?share_source=copy_web&vd_source=c883b3d27d636e08e40154e6f636d504"><strong>在B站观看</strong></a></p><hr><h2 id="麦克风开始抽风"><a href="#麦克风开始抽风" class="headerlink" title="麦克风开始抽风"></a>麦克风开始抽风</h2><p>刚刚激活，就…</p><p><img src="/img/apple-watch-series-8-mic-failed/mic-bug-wechat.jpeg" alt="刚激活就失灵了一次"></p><p>又陆陆续续失灵了几次，<strong>重启都能解决</strong>…</p><p><strong>发了条微博：<a href="https://weibo.com/6341527351/M6sL4c4RH">麦克风失灵</a></strong></p><p>评论来看，也有问题…</p><p><img src="/img/apple-watch-series-8-mic-failed/mic-bug-weibo-comments.jpeg"></p><p><strong>在论坛里也找到了一样的问题：<a href="https://discussionschinese.apple.com/thread/254207265?page=2">iwatch s8 麦克风高频率拾音故障</a></strong></p><blockquote><p><strong>吐槽下，iWatch是什么东西…懂，但是没有这个名字</strong></p></blockquote><hr><h2 id="复现问题-amp-amp-反馈问题"><a href="#复现问题-amp-amp-反馈问题" class="headerlink" title="复现问题 &amp;&amp; 反馈问题"></a>复现问题 &amp;&amp; 反馈问题</h2><p>觉得像是软件的 bug</p><p>打了个 400 电话，让我重新配对，</p><p><strong>肯定是没效果的啦！</strong></p><p>但是，</p><p>我感觉像是<strong>噪声</strong>app的环境音量检测出 bug 了，关掉之后，确实<em><strong>缓解了</strong></em>。</p><p>解决了，但是没有完全解决。</p><p>好在，</p><p>又发现了一个不用重启的解决方案，</p><p>放充电器上充会儿电就好了。</p><hr><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>目前为止有<strong>三种解决方案</strong>，再来梳理一下：</p><ul><li>重启 Apple Watch（只能短暂解决，后续还可能会出现相同的问题，需要再次重启）</li><li>关闭噪声app中的环境音量测量（在watch设置-噪声中） </li><li>出现该问题时，将手表放到充电器上充电5分钟，可以恢复</li></ul><p>其中，第一种只能<strong>短暂地解决该问题</strong>，第二种能<strong>缓解该问题</strong>，第三种也<strong>只能作为一种补救措施</strong>。</p><p>我的建议是：<strong>第二第三种搭配使用</strong>。</p><p><em><strong>苹果那边已经反馈过去了</strong></em>，正在等待 watchOS 9.0.1或者 watchOS 9.1解决这个问题。</p><blockquote><p>奇怪的是，</p><p>用第二种关闭了环境音量检测后，仍然可以在健康app里查看到环境噪声分贝的信息，</p><p>而且数据还是手表提供的</p><p><img src="/img/apple-watch-series-8-mic-failed/noise-disabled-health-app.jpeg" alt="绝对是Bug"></p></blockquote><p><del>真垃圾！</del></p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>貌似苹果确认了 <a href="http://www.sycaijing.com/news/flash?id=125464">确认了这个问题的存在</a>，</p><p><del>但是不知道能不能找到问题的原因，</del></p><p><del>这决定了最终能不能修复这个bug。</del></p><article class="message is-success">        <div class="message-header"><p>2022.10.11</p></div>        <div class="message-body">            <p>watchOS 9.0.2 更新日志中写道：<strong>修复了部分 Apple Watch Series 8 和 Ultra 用户的麦克风音频中断的问题</strong></p><p>经过测试，重新打开“环境音量检测”后一整天都没再出现此问题了</p>        </div>    </article><p><img src="/img/apple-watch-series-8-mic-failed/bug-fixed.jpeg" alt="watchOS 9.0.2"></p>]]></content>
    
    
    <summary type="html">&lt;article class=&quot;message is-success&quot;&gt;
        
        &lt;div class=&quot;message-body&quot;&gt;
            &lt;p&gt;此问题已在 watchOS 9.0.2 中修复。&lt;/p&gt;

        &lt;/div&gt;
    &lt;/article&gt;

&lt;p&gt;如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/apple-watch-series-8-mic-failed/mic-failed.jpeg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="吐个槽" scheme="https://liyanan2004.github.io/categories/%E5%90%90%E4%B8%AA%E6%A7%BD/"/>
    
    
    <category term="bug" scheme="https://liyanan2004.github.io/tags/bug/"/>
    
    <category term="watchOS" scheme="https://liyanan2004.github.io/tags/watchOS/"/>
    
    <category term="Apple Watch" scheme="https://liyanan2004.github.io/tags/Apple-Watch/"/>
    
  </entry>
  
  <entry>
    <title>就爱在网上BB？IP直接拿捏你</title>
    <link href="https://liyanan2004.github.io/ip-locate/"/>
    <id>https://liyanan2004.github.io/ip-locate/</id>
    <published>2022-09-30T14:51:30.469Z</published>
    <updated>2022-10-11T11:40:31.467Z</updated>
    
    <content type="html"><![CDATA[<p>发生在高中同学身上的真实事件。</p><p>这年头还有人喜欢在互联网上平白无故地造谣的嘛？</p><p>还是一个高中的，</p><p>表面看看还真不觉得…</p><p>实际上做着下三滥的事情。</p><p>一会儿立信一会儿🐔大。</p><p>害。</p><p><img src="/img/ip-locate/lache.jpeg"></p><span id="more"></span><hr><h2 id="一些经过"><a href="#一些经过" class="headerlink" title="一些经过"></a>一些经过</h2><p>言归正传。</p><p>先简单捋一下经过哈。</p><p>在用小号跟她“了解”情况过后，也要到了QQ，应该是小号，确定了两名“嫌疑人”，</p><p>分别在衫达（嘉善校区）和上海建桥学院，</p><p>但是也没有找到别的证据能很好的判断是谁。</p><p>好就好在一个开学了一个没开，两所学校的大致距离（一公里的那个圈）相差蛮远的。</p><p>脑中浮现出一个想法，IP能定位吗？</p><p>答案是，可以，而且还蛮准。</p><hr><h2 id="所需准备"><a href="#所需准备" class="headerlink" title="所需准备"></a>所需准备</h2><ol><li>一个合理的理由（要点开才能获取到IP然后上传，对吧？）</li><li>后端结构化数据存储服务器（用来存接收到的IP）</li><li>一个域名（用来配置服务器，免费的就行）</li><li>一些JS的基础（要写一个网页的嘛～）</li></ol><h2 id="后端存储服务器"><a href="#后端存储服务器" class="headerlink" title="后端存储服务器"></a>后端存储服务器</h2><p>之前做博客的时候用过Leancloud做评论系统，</p><p>后续这个新博客的评论系统也将基于 Leancloud。</p><p>这次用的是Leancloud国际版。</p><p>至于为什么是国际版后面会说。</p><h2 id="IP获取"><a href="#IP获取" class="headerlink" title="IP获取"></a>IP获取</h2><p>用的是搜狐开放的script嵌入。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://pv.sohu.com/cityjson?ie=utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ip_address = returnCitySN[<span class="string">&quot;cip&quot;</span>]</span><br></pre></td></tr></table></figure><h2 id="数据上传"><a href="#数据上传" class="headerlink" title="数据上传"></a>数据上传</h2><p>这部分在 Leancloud 的技术文档里写的很明白，</p><p>我这个需求其实就是把获取到的IP地址字符串上传到 Leancloud 结构化存储中，</p><p>稍微改下实例代码就行。</p><p>具体不多赘述，想要了解的可以看<a href="https://leancloud.cn/docs/leanstorage_guide-js.html"><strong>技术文档</strong></a>。</p><blockquote><p>至于为什么要用国际版 因为国内版本强制要求添加 API 域名并且需要备案</p><p>时间紧迫 也不想搞这些东西 申请一个免费的简单用下就好<br>国际版不需要提供 serverURL </p><p>但是国内网络上传会 403，所以申请了个域名，配置好以后国内外都能用，也不需要备案了</p><p>免费域名在 <a href="http://www.freenom.com/">Freenom</a>。</p></blockquote><h2 id="一切就绪-坐等IP"><a href="#一切就绪-坐等IP" class="headerlink" title="一切就绪 坐等IP"></a>一切就绪 坐等IP</h2><p>网页发过去，被对面点开，</p><p>过了会儿显示连接错误，</p><p><em><strong>你以为是真的连接错误吗？格局小了 我代码里写的就是错误</strong></em>🤣，</p><p>我这里显示他点开了4次。</p><p><strong>IP、设备类型</strong> 也完美接收过来了。</p><p><img src="/img/ip-locate/data.jpeg"></p><h2 id="让我看看你在哪"><a href="#让我看看你在哪" class="headerlink" title="让我看看你在哪"></a>让我看看你在哪</h2><p>拿到IP就是要找位置咯？</p><p>在这<a href="https://chaipip.com/">查询下IP的大致位置</a></p><p>大致精度在1公里左右，</p><p>那么 <strong>是谁也就一目了然了</strong>。</p><p><img src="/img/ip-locate/location.jpeg"></p><hr><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>这属于是多年来的技术经验的一次大考，之前做个人博客的时候有幸接触到了这些，这次才比较顺利。</p><p>最好的结果就是能找到这个在网络上伪装他人发布谣言的傻zi（B）</p><p>真的，给他测试的时候真的很开心，做出来了，精度可以，努力不白费。</p><p>也希望这个伪装别人造谣的人在私立大学里好好反省吧，看接下来学校怎么对她处理了，哈哈</p><h3 id="顺便记录下时间点："><a href="#顺便记录下时间点：" class="headerlink" title="顺便记录下时间点："></a>顺便记录下时间点：</h3><ul><li>9.27 第一次发现在贴吧造谣</li><li>9.28 被我查到 IP 定位，依然很拽，晚上还在贴吧BB（也是这一天受害者向他们学校发送了邮件举报）</li><li>9.29 早上10点左右开始关闭贴吧私信，QQ删除好友并设置不可搜索，微信号更改并设置不可搜索</li><li>9.30 贴吧更新头像：差不多得了。</li></ul><p><img src="/img/ip-locate/baibei.jpeg"></p><p>哈哈，画上圆满的句号。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;发生在高中同学身上的真实事件。&lt;/p&gt;
&lt;p&gt;这年头还有人喜欢在互联网上平白无故地造谣的嘛？&lt;/p&gt;
&lt;p&gt;还是一个高中的，&lt;/p&gt;
&lt;p&gt;表面看看还真不觉得…&lt;/p&gt;
&lt;p&gt;实际上做着下三滥的事情。&lt;/p&gt;
&lt;p&gt;一会儿立信一会儿🐔大。&lt;/p&gt;
&lt;p&gt;害。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/ip-locate/lache.jpeg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="瞎折腾" scheme="https://liyanan2004.github.io/categories/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="写代码" scheme="https://liyanan2004.github.io/tags/%E5%86%99%E4%BB%A3%E7%A0%81/"/>
    
    <category term="IP定位" scheme="https://liyanan2004.github.io/tags/IP%E5%AE%9A%E4%BD%8D/"/>
    
    <category term="Web" scheme="https://liyanan2004.github.io/tags/Web/"/>
    
    <category term="JS" scheme="https://liyanan2004.github.io/tags/JS/"/>
    
    <category term="Leancloud" scheme="https://liyanan2004.github.io/tags/Leancloud/"/>
    
  </entry>
  
</feed>
